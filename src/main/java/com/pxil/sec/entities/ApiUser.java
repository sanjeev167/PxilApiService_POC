/*
 * Created on 2024-01-16 ( 16:42:23 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.pxil.sec.entities;

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import javax.persistence.*;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * JPA entity class for "ApiUser"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="api_user")
@JsonIgnoreProperties({"listOfApiUserGroup","listOfApiRefreshToken","pxGridNodeMstr","createdOn","createdBy","modifiedOn","modifiedBy","activeC"})

public class ApiUser implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Integer    id ;

    //--- ENTITY DATA FIELDS 
    @Column(name="name", nullable=false, length=100)
    private String     name ;

    @Column(name="email", nullable=false, length=100)
    private String     email ;

    @Column(name="pwd", nullable=false, length=100)
    private String     pwd ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on")
    private Date       createdOn ;

    @Column(name="created_by")
    private Integer    createdBy ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modified_on")
    private Date       modifiedOn ;

    @Column(name="modified_by")
    private Integer    modifiedBy ;

    @Column(name="active_c", nullable=false, length=1)
    private String     activeC ;

    @Column(name="user_context", length=100)
    private String     userContext ;

    @Column(name="grid_node_code", length=100)
    private String     gridNodeCode ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @JsonIgnore
    @OneToMany(mappedBy="apiUser")
    private List<ApiRefreshToken> listOfApiRefreshToken ; 

    @JsonIgnore
    @OneToMany(mappedBy="apiUser",fetch = FetchType.EAGER) 
    private List<ApiUserGroup> listOfApiUserGroup ; 

    @JsonIgnore
    @ManyToOne
    @JoinColumn(name="grid_node_code", referencedColumnName="gnm_grid_node_code", insertable=false, updatable=false)
    private PxGridNodeMstr pxGridNodeMstr ; 


    /**
     * Constructor
     */
    public ApiUser() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    public void setName( String name ) {
        this.name = name ;
    }
    public String getName() {
        return this.name;
    }

    public void setEmail( String email ) {
        this.email = email ;
    }
    public String getEmail() {
        return this.email;
    }

    public void setPwd( String pwd ) {
        this.pwd = pwd ;
    }
    public String getPwd() {
        return this.pwd;
    }

    public void setCreatedOn( Date createdOn ) {
        this.createdOn = createdOn ;
    }
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedBy( Integer createdBy ) {
        this.createdBy = createdBy ;
    }
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    public void setModifiedOn( Date modifiedOn ) {
        this.modifiedOn = modifiedOn ;
    }
    public Date getModifiedOn() {
        return this.modifiedOn;
    }

    public void setModifiedBy( Integer modifiedBy ) {
        this.modifiedBy = modifiedBy ;
    }
    public Integer getModifiedBy() {
        return this.modifiedBy;
    }

    public void setActiveC( String activeC ) {
        this.activeC = activeC ;
    }
    public String getActiveC() {
        return this.activeC;
    }

    public void setUserContext( String userContext ) {
        this.userContext = userContext ;
    }
    public String getUserContext() {
        return this.userContext;
    }

    public void setGridNodeCode( String gridNodeCode ) {
        this.gridNodeCode = gridNodeCode ;
    }
    public String getGridNodeCode() {
        return this.gridNodeCode;
    }

    //--- GETTERS FOR LINKS
    public List<ApiRefreshToken> getListOfApiRefreshToken() {
        return this.listOfApiRefreshToken;
    } 

    public List<ApiUserGroup> getListOfApiUserGroup() {
        return this.listOfApiUserGroup;
    } 

    public PxGridNodeMstr getPxGridNodeMstr() {
        return this.pxGridNodeMstr;
    } 

    //--- toString specific method
	@Override
    public String toString() { 
        StringBuilder sb = new StringBuilder(); 
        sb.append(id);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(pwd);
        sb.append("|");
        sb.append(createdOn);
        sb.append("|");
        sb.append(createdBy);
        sb.append("|");
        sb.append(modifiedOn);
        sb.append("|");
        sb.append(modifiedBy);
        sb.append("|");
        sb.append(activeC);
        sb.append("|");
        sb.append(userContext);
        sb.append("|");
        sb.append(gridNodeCode);
        return sb.toString(); 
    } 

}
